{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"wo",
				"world_matrix"
			],
			[
				"e",
				"epsilon"
			],
			[
				"r",
				"radius"
			],
			[
				"nor",
				"normal"
			],
			[
				"draw",
				"draw_wire_triangle"
			],
			[
				"d",
				"dist"
			],
			[
				"test",
				"test_point"
			],
			[
				"use",
				"use_index_buffer"
			],
			[
				"norm",
				"normal_precision"
			],
			[
				"ro",
				"round_vec3"
			],
			[
				"ca",
				"camera"
			],
			[
				"fp",
				"fp_controller"
			],
			[
				"move",
				"move_friction"
			],
			[
				"st",
				"static"
			],
			[
				"RAD",
				"DEG2RAD"
			],
			[
				"draw_wr",
				"draw_wire_circle"
			],
			[
				"rota",
				"rotate_x"
			],
			[
				"mat",
				"matrix"
			],
			[
				"draw_wi",
				"draw_wire_sphere"
			],
			[
				"sq",
				"sqr_length"
			],
			[
				"si",
				"s_dist"
			],
			[
				"pin",
				"point_in_circle"
			],
			[
				"ex",
				"expanded"
			],
			[
				"po",
				"position"
			],
			[
				"h",
				"height"
			],
			[
				"plan",
				"plane"
			],
			[
				"ray",
				"ray_plane"
			],
			[
				"clos",
				"closest"
			],
			[
				"s",
				"speed"
			],
			[
				"p",
				"position"
			],
			[
				"c",
				"cylinder"
			],
			[
				"wall",
				"walls"
			],
			[
				"res",
				"result"
			],
			[
				"sqr",
				"sqr_distance"
			],
			[
				"col",
				"collision"
			],
			[
				"dir",
				"direction"
			],
			[
				"Vec",
				"Vec3"
			],
			[
				"min",
				"min_dist"
			],
			[
				"pos",
				"position"
			],
			[
				"pr",
				"printf\tprintf â€¦"
			],
			[
				"chil",
				"children"
			],
			[
				"cam",
				"camera"
			],
			[
				"w",
				"world_matrix"
			],
			[
				"pro",
				"proj"
			],
			[
				"plane",
				"plane_from_triangle"
			],
			[
				"draw_l",
				"draw_normal"
			],
			[
				"mes",
				"meshes"
			],
			[
				"draw_T",
				"draw_wire_triangle"
			],
			[
				"vel",
				"velocity"
			],
			[
				"no",
				"normal"
			],
			[
				"ve",
				"velocity"
			],
			[
				"drwa",
				"draw_mesh"
			],
			[
				"str",
				"stride"
			],
			[
				"clo",
				"closest"
			],
			[
				"fo",
				"format"
			],
			[
				"vec",
				"vec4"
			],
			[
				"ra",
				"radius"
			],
			[
				"nora",
				"normalize"
			],
			[
				"in",
				"info"
			],
			[
				"close",
				"closest_on_plane"
			],
			[
				"de",
				"delta"
			],
			[
				"wc",
				"wc_normal"
			],
			[
				"wc_",
				"wc_eye"
			],
			[
				"input",
				"input_mono"
			],
			[
				"i",
				"icol"
			],
			[
				"set",
				"set_uniform"
			],
			[
				"sade",
				"shaders"
			],
			[
				"inst",
				"instance_color"
			],
			[
				"view",
				"view_projection"
			],
			[
				"depth",
				"depth_sample"
			],
			[
				"bg",
				"bg_colors"
			],
			[
				"sce",
				"scene"
			],
			[
				"new",
				"new_entity"
			],
			[
				"En",
				"Entity"
			],
			[
				"b",
				"blur"
			],
			[
				"en",
				"entity"
			],
			[
				"VEC",
				"VEC2"
			],
			[
				"FLO",
				"FLOAT_TYPE_VEC3"
			],
			[
				"prop",
				"prop_name"
			],
			[
				"read",
				"read_i32"
			],
			[
				"num",
				"num_props"
			],
			[
				"Anim",
				"Animation_Property"
			],
			[
				"An",
				"Animation_Curve_ID"
			],
			[
				"nu",
				"num_curves"
			],
			[
				"re",
				"return"
			],
			[
				"Ve",
				"Vec3"
			],
			[
				"V",
				"Vec3"
			],
			[
				"ke",
				"keyframes"
			],
			[
				"Ke",
				"Kern_Key"
			],
			[
				"alloc",
				"alloc_array"
			],
			[
				"max",
				"max_index"
			],
			[
				"index",
				"index_count"
			],
			[
				"vert",
				"vert_count"
			],
			[
				"ver",
				"vert_count"
			],
			[
				"Deb",
				"Debug_Primitive"
			],
			[
				"De",
				"Debug_Primitive"
			],
			[
				"att",
				"attr_name"
			],
			[
				"scen",
				"scene_target"
			],
			[
				"ui",
				"ui_target"
			],
			[
				"con",
				"convert_blend_op"
			],
			[
				"conver",
				"convert_blend_op"
			],
			[
				"m_",
				"m_down"
			],
			[
				"dst",
				"dst_func"
			],
			[
				"src",
				"src_func"
			],
			[
				"sr",
				"src_alpha"
			],
			[
				"m",
				"m_down"
			],
			[
				"Debug",
				"Debug_Drop_Down"
			],
			[
				"draw_",
				"draw_drop_down"
			],
			[
				"com",
				"components"
			],
			[
				"la",
				"label"
			],
			[
				"GL_ON",
				"GL_ONE"
			],
			[
				"GL_ONE",
				"GL_ONE_MINUS_SRC_ALPHA"
			],
			[
				"clea",
				"clear_mode"
			],
			[
				"glDepth",
				"glDepthMask"
			],
			[
				"glDe",
				"glDepthRangef"
			],
			[
				"glClea",
				"glClearColor"
			],
			[
				"enable",
				"enable_alpha_blending"
			],
			[
				"GRE",
				"GREATER_OR_EQUAL"
			],
			[
				"blend",
				"blend_mode"
			],
			[
				"alp",
				"alpha_blending"
			],
			[
				"ar",
				"array_buffer"
			],
			[
				"dep",
				"depth_mode"
			],
			[
				"al",
				"alpha_blending"
			],
			[
				"bel",
				"blend_mode"
			],
			[
				"frame",
				"frame_buffer"
			],
			[
				"_",
				"_gl_state"
			],
			[
				"ba",
				"background"
			],
			[
				"chec",
				"check_width"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/app.cpp",
			"settings":
			{
				"buffer_size": 5940,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/first_person_controller.cpp",
			"settings":
			{
				"buffer_size": 2778,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/intersect.cpp",
			"settings":
			{
				"buffer_size": 11416,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "TERM environment variable not set.\n----------Compiling Assets-----------\nsrc/textured.glsl\nsrc/fonts/input_mono.font\nsrc/glsl/grid_noise.glsl\nsrc/glsl/gl_lines.glsl\nsrc/glsl/screen.glsl\nsrc/glsl/flat.glsl\nsrc/glsl/shadow.glsl\nsrc/glsl/reflection.glsl\nsrc/glsl/msdf_text.glsl\nsrc/glsl/instance_noise.glsl\nsrc/glsl/sphere_map.glsl\nsrc/glsl/basic.glsl\nsrc/glsl/fxaa.glsl\nsrc/glsl/rainbow_rain.glsl\nsrc/glsl/sdf_circle.glsl\nsrc/glsl/debug.glsl\nsrc/glsl/rect.glsl\nsrc/glsl/instance_mouse.glsl\nsrc/scene/grid.scene\nsrc/scene/monkey.scene\nsrc/scene/sphere.scene\nsrc/scene/construct.scene\nsrc/img/whitebox.png\nsrc/img/matcap_white.png\nsrc/img/input_mono.png\nsrc/img/matcap.png\nAWWW YEAH!\n[Finished in 3.3s]",
			"settings":
			{
				"buffer_size": 698,
				"line_ending": "Unix",
				"name": "Build output",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 311.0,
		"last_filter": "Package Control: re",
		"selected_items":
		[
			[
				"Package Control: re",
				"Package Control: Remove Package"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"i",
				"Package Control: Install Package"
			],
			[
				"Package Control: dis",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"Package Control:d",
				"Package Control: Disable Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Preferences: Browse Packages"
			],
			[
				"da",
				"DataConverter: to Python dict"
			],
			[
				"data",
				"DataConverter: to JSON"
			],
			[
				"preyy",
				"Pretty JSON: Minify (compress) JSON"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"Package Control",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 684.0
	},
	"console":
	{
		"height": 320.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			" import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os; pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/gareth/Documents/dev/gblib",
		"/home/gareth/Documents/dev/gblib/src"
	],
	"file_history":
	[
		"/home/gareth/Documents/dev/gblib/src/gl_draw.cpp",
		"/home/gareth/Documents/dev/gblib/src/intersect.cpp",
		"/home/gareth/Documents/dev/gblib/src/camera.cpp",
		"/home/gareth/Documents/dev/gblib/src/matrix4.cpp",
		"/home/gareth/Documents/dev/gblib/src/triangle.cpp",
		"/home/gareth/Documents/dev/gblib/src/python/io_export_webgl_scene.py",
		"/home/gareth/Documents/dev/gblib/src/plane.cpp",
		"/home/gareth/Documents/dev/gblib/src/free_look.cpp",
		"/home/gareth/Documents/dev/gblib/src/vector_types.cpp",
		"/home/gareth/Documents/dev/gblib/src/vector3.cpp",
		"/home/gareth/Documents/dev/gblib/src/entity.cpp",
		"/home/gareth/Documents/dev/gblib/src/gblib.cpp",
		"/home/gareth/Documents/dev/gblib/src/first_person_contoller.cpp",
		"/home/gareth/Documents/dev/gblib/src/quaternion.cpp",
		"/home/gareth/Documents/dev/gblib/src/colours.cpp",
		"/home/gareth/Documents/dev/gblib/src/webgl.cpp",
		"/home/gareth/Documents/dev/gblib/src/scratch_pad.cpp",
		"/home/gareth/Documents/dev/gblib/src/scene_types.cpp",
		"/home/gareth/Documents/dev/gblib/src/vector2.cpp",
		"/home/gareth/Documents/dev/gblib/src/projection.cpp",
		"/home/gareth/Documents/dev/gblib/src/engine_types.cpp",
		"/home/gareth/Documents/dev/gblib/src/print.cpp",
		"/home/gareth/Documents/dev/gblib/src/vector4.cpp",
		"/home/gareth/Documents/dev/gblib/build.sh",
		"/home/gareth/Documents/dev/gblib/src/debug_view.cpp",
		"/home/gareth/Documents/dev/gblib/src/input.cpp",
		"/home/gareth/Documents/dev/gblib/src/primitive_types.cpp",
		"/home/gareth/Documents/dev/gblib/src/physics.cpp",
		"/home/gareth/Documents/dev/gblib/src/gl_types.cpp",
		"/home/gareth/Documents/dev/gblib/src/math.cpp",
		"/home/gareth/Documents/dev/gblib/src/assets.cpp",
		"/home/gareth/Documents/dev/gblib/src/main.cpp",
		"/home/gareth/Documents/dev/gblib/src/textured.glsl",
		"/home/gareth/Documents/dev/gblib/src/image_loader.cpp",
		"/home/gareth/Documents/dev/gblib/src/glsl/basic.glsl",
		"/home/gareth/Documents/dev/gblib/src/glsl/textured.glsl",
		"/home/gareth/Documents/dev/gblib/src/glsl/flat.glsl",
		"/home/gareth/Documents/dev/gblib/src/macros.cpp",
		"/home/gareth/Documents/dev/gblib/src/glsl/sphere_map.glsl",
		"/home/gareth/Documents/dev/gblib/src/glsl/screen.glsl",
		"/home/gareth/Documents/dev/gblib/src/glsl/reflection.glsl",
		"/home/gareth/Documents/dev/gblib/src/glsl/rect.glsl",
		"/home/gareth/Documents/dev/gblib/asset_compiler.py",
		"/home/gareth/Documents/dev/gblib/src/render_target.cpp",
		"/home/gareth/Documents/dev/gblib/src/texture.cpp",
		"/home/gareth/Documents/dev/gblib/src/mesh.cpp",
		"/home/gareth/Documents/dev/translating/delaunator.js",
		"/home/gareth/Documents/dev/gblib/src/glsl/warp.glsl",
		"/home/gareth/Documents/dev/gblib/src/glsl/sobel.glsl",
		"/home/gareth/Documents/dev/gblib/src/glsl/fxaa.glsl",
		"/home/gareth/Documents/dev/gblib/src/glsl/components/fresnel.glslc",
		"/home/gareth/Documents/dev/gblib/src/glsl/components/fxaa.glslc",
		"/home/gareth/Documents/dev/gblib/src/glsl/debug.glsl",
		"/home/gareth/Documents/dev/gblib/src/asset_types.cpp",
		"/home/gareth/Documents/dev/gblib/src/libs/stb_image.h",
		"/home/gareth/Documents/dev/gblib/src/glsl/components/tonemap.glslc",
		"/home/gareth/Documents/dev/gblib/src/glsl/components/billboard.glslc",
		"/home/gareth/Documents/dev/gblib/build/wasm_loader.js",
		"/home/gareth/Documents/dev/gblib/src/glsl/rainbow_rain.glsl",
		"/home/gareth/Documents/dev/gblib/build/index.html",
		"/home/gareth/Documents/dev/gblib/src/tween.cpp",
		"/home/gareth/Documents/dev/gblib/src/text.cpp",
		"/home/gareth/Documents/dev/gblib/src/quad_mesh.cpp",
		"/home/gareth/Documents/dev/gblib/src/glsl/components/hsb.glslc",
		"/home/gareth/Documents/dev/gblib/src/glsl/instance_noise.glsl",
		"/home/gareth/Documents/dev/gblib/src/glsl/components/half_tone.glslc",
		"/home/gareth/Documents/dev/gblib/src/glsl/components/half_tone_accumlative.glslc",
		"/home/gareth/Documents/dev/gblib/src/glsl/components/simplex_noise.glslc",
		"/home/gareth/Documents/dev/gblib/src/glsl/components/random.glslc",
		"/home/gareth/Documents/dev/gblib/src/glsl/grid_noise.glsl",
		"/home/gareth/Documents/dev/gblib/src/glsl/components/noise.glslc",
		"/home/gareth/Documents/dev/gblib/src/glsl/sdf_circle.glsl",
		"/home/gareth/Documents/dev/gblib/src/random.cpp",
		"/home/gareth/Documents/dev/gblib/src/animation.cpp",
		"/home/gareth/Documents/webdev/gblib/src/js/webgl.js",
		"/home/gareth/Documents/dev/gblib/src/glsl/components/sdf.glslc",
		"/home/gareth/Documents/dev/gblib/src/ease.cpp",
		"/home/gareth/Documents/dev/gblib/src/animation_types.cpp",
		"/home/gareth/Documents/dev/air/data_request.js",
		"/home/gareth/Documents/dev/gblib/src/array_types.cpp",
		"/home/gareth/Documents/dev/gblib/src/memory.cpp",
		"/home/gareth/Documents/webdev/webgl/src/js/animation.js",
		"/home/gareth/Documents/webdev/gblib/src/js/animation.js",
		"/home/gareth/Documents/dev/gblib/src/engine.cpp",
		"/home/gareth/Documents/dev/gblib/src/serialize.cpp",
		"/home/gareth/Documents/dev/gblib/src/debug_types.cpp",
		"/home/gareth/Documents/dev/gblib/src/curve.cpp",
		"/home/gareth/Documents/dev/sdf_font_builder/src/main.cpp",
		"/home/gareth/Documents/dev/gblib/src/glsl/msdf_text.glsl",
		"/home/gareth/Documents/dev/gblib/src/glsl/components/gamma.glslc",
		"/home/gareth/Documents/dev/gblib/src/glsl/components/safe_normalize.glslc",
		"/home/gareth/Documents/dev/gblib/src/glsl/components/blend_modes.glslc",
		"/home/gareth/Documents/dev/gblib/src/glsl/instance_mouse.glsl",
		"/home/gareth/Documents/webdev/webgl/src/js/quad.js",
		"/home/gareth/Documents/webdev/webgl/src/js/webgl.js",
		"/home/gareth/Documents/dev/emscripten/emsdk/emscripten/incoming/system/include/GLES2/gl2.h",
		"/home/gareth/Documents/dev/gblib/src/gblib_dependencies.cpp",
		"/home/gareth/Dropbox/notes.js",
		"/home/gareth/Documents/webdev/webgl/src/js/debug_view.js",
		"/home/gareth/Documents/dev/gblib/src/colour.cpp",
		"/home/gareth/Documents/webdev/webgl/src/js/colors.js",
		"/home/gareth/Documents/dev/gblib/src/manifest.cpp",
		"/home/gareth/Documents/dev/gblib/src/time.cpp",
		"/home/gareth/Documents/dev/hello/src/text.cpp",
		"/home/gareth/Documents/dev/hello/src/glsl/msdf_text.glsl",
		"/home/gareth/Documents/dev/hello/src/glsl/instance.glsl",
		"/home/gareth/Documents/dev/hello/src/glsl/components/wang_hash_noise.glslc",
		"/home/gareth/Documents/dev/hello/src/gl_types.cpp",
		"/home/gareth/Documents/dev/hello/src/glsl/flat.glsl",
		"/home/gareth/Documents/dev/hello/src/debug_types.cpp",
		"/home/gareth/Documents/dev/hello/src/scene_types.cpp",
		"/home/gareth/Documents/dev/hello/src/glsl/rect.glsl",
		"/home/gareth/Documents/dev/hello/src/entity.cpp",
		"/home/gareth/Documents/dev/hello/src/gl_draw.cpp",
		"/home/gareth/Documents/dev/hello/src/manifest.cpp",
		"/home/gareth/Documents/dev/hello/src/engine.cpp",
		"/home/gareth/Documents/dev/hello/src/main.cpp",
		"/home/gareth/Documents/dev/hello/src/asset_types.cpp",
		"/home/gareth/Documents/dev/hello/src/engine_types.cpp",
		"/home/gareth/Documents/dev/hello/src/colour.cpp",
		"/home/gareth/Documents/dev/hello/src/input.cpp",
		"/home/gareth/Documents/dev/hello/src/time.cpp",
		"/home/gareth/Documents/dev/hello/src/assets.cpp",
		"/home/gareth/Documents/dev/hello/src/free_look.cpp",
		"/home/gareth/Documents/dev/hello/src/image_loader.cpp",
		"/home/gareth/Documents/dev/hello/src/serialize.cpp",
		"/home/gareth/Documents/dev/hello/src/intersect.cpp",
		"/home/gareth/Documents/dev/hello/src/vector_types.cpp"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"fl->",
			"add_entity",
			"accel",
			"fl",
			"cylinder",
			"Cylinder",
			"cylinder",
			"line_line",
			"ray_plane",
			"::))",
			"v2",
			"v1",
			"v0",
			"0.00001",
			"innerProduct",
			"crossProduct",
			"invDenom",
			"rectangle_from_width_height",
			"texture",
			"shader",
			"tex,",
			"TIME",
			"RENDERSIZE",
			"gridRot",
			"rgba",
			"fragDistanceToGridCenter",
			"smoothDist",
			"gridDotLoc",
			"gridFragLoc",
			"dotRadius",
			"renderDotImageColorRGB",
			"renderDotLoc",
			"inputImage",
			"grid_size/2.0",
			"gridSize",
			"rgbaAmounts",
			"tmp_coords",
			"frag_rht",
			"frag_top",
			"gridRot",
			"tmpGridCoords",
			"gridFragLoc",
			"cTrans",
			"matrix",
			"gridDotLoc",
			"renderDotLoc",
			"gridOriginLoc",
			"fragDistanceToDotCenter",
			"cos_angle",
			"sin_angle",
			"fragAtRightOfGrid",
			"fragAtTopOfGrid",
			"gridSize",
			"renderDotImageColorRGB",
			"rotRad",
			"ccTrans",
			"dotRadius",
			"rgbAmounts",
			"originOffsets",
			"showDataVis",
			"alloc",
			"draw_text",
			"draw_label",
			"draw_value",
			"sprint",
			"draw_tex",
			"Debug_Primitive",
			"draw_value",
			"bytes",
			"uFgColor",
			"opacity",
			"uPremultiply",
			"uGamma",
			"kNormalization",
			"kThickness",
			"gradDist",
			"safeNormalize",
			"sigDist",
			"Jdy",
			"Jdx",
			"\\n",
			"\"",
			"set_blend_mode",
			"glClear",
			"clear",
			"depth",
			"clear_mode",
			"depth_",
			"enable_depth",
			"clear_mode",
			"blend_mode",
			"set_clear_mode",
			"link_vertex_attr",
			"draw_text",
			"sampler",
			"update_vertex_b",
			"alloc_vertex_buffer",
			"GL_Line_Attribute",
			"GL_Quad_Attribute",
			"read_bytes",
			"attr",
			"BYTE_PADDING",
			"font",
			"copy_bytes",
			"Teko",
			"\"",
			"tc0",
			"font_tex",
			"formatFlags",
			"uint32_t",
			"mipmap",
			"instanced",
			"instance",
			"App",
			"app",
			"assert",
			":",
			"GL.",
			"set_blend_mode",
			"enable_alpha",
			"Keys.",
			":",
			"emscripten_set_keypress_callback",
			"loop_handler",
			"loop_hander",
			"process_input",
			"[1]",
			"[0]"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"fp->",
			"add_to_scene",
			"fp->acceleration",
			"fp",
			"capsule",
			"Capsule",
			"capsule",
			"t.c",
			"t.b",
			"t.a",
			"EPSILON",
			"dot",
			"cross",
			"inv",
			"_uv,",
			"time",
			"view",
			"grid_rot",
			"rgb",
			"frag_dist",
			"smooth_dist",
			"grid_dot",
			"grid_frag",
			"radius",
			"sample",
			"render_dot",
			"image",
			"half_grid_size",
			"grid_size",
			"rgba",
			"tmp",
			"frag_r",
			"frag_t",
			"grid_rot",
			"tmp_coords",
			"grid_frag",
			"matB",
			"matA",
			"grid_dot",
			"render_dot",
			"grid_origin",
			"dist",
			"CA",
			"SA",
			"frag_right",
			"frag_top",
			"grid_size",
			"sample",
			"angle",
			"matrix",
			"radius",
			"rgb",
			"offsets",
			"debug_draw_label",
			"debug_draw_value",
			"Float_Primitive",
			"_color",
			"alpha",
			"premul",
			"gamma",
			"normalization",
			"thickness",
			"gd",
			"safe_normalize",
			"sd",
			"dy",
			"dx",
			"",
			"GL_Line_Vertex",
			"GL_Quad_Vertex",
			"BYTE_ALIGNMENT",
			"'",
			"_uv",
			"atlas",
			"format_flags",
			"u32",
			"engine",
			" =",
			"GL_",
			"Key_Code::",
			"=",
			".y",
			".x",
			"u8",
			"memsize",
			"static",
			"key_str",
			"ctx",
			"gl_draw",
			".triangles",
			"",
			"wrap_angle",
			"TILT_LIMIT",
			"accel[2]",
			"SPIN_SPEED",
			"ease_curve",
			"pts",
			"pnts",
			"set_vec3",
			",",
			"",
			"log",
			"m[15]",
			"m[14]",
			"m[13]",
			"m[12]",
			"m[11]",
			"m[10]",
			"m[9]",
			"m[8]",
			"m[7]",
			"m[6]",
			"m[5]",
			"m[4]",
			"m[2]",
			"m[1]",
			"m[0]",
			"r",
			"m[11]",
			"m[10]",
			"m[9]",
			"m[8]",
			"m[7]",
			"m[6]",
			"m[5]",
			"m[4]",
			"m[3]",
			"m[2]"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/app.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5940,
						"regions":
						{
						},
						"selection":
						[
							[
								3581,
								3581
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 1386.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/first_person_controller.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2778,
						"regions":
						{
						},
						"selection":
						[
							[
								2771,
								2771
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2367.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "src/intersect.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11416,
						"regions":
						{
						},
						"selection":
						[
							[
								10167,
								10167
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 10111.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 698,
						"regions":
						{
						},
						"selection":
						[
							[
								698,
								698
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 369.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 40.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.exec":
	{
		"height": 184.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/JS.sublime-build",
	"project": "project.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"cam",
				"src/camera.cpp"
			],
			[
				"gl_draw",
				"src/gl_draw.cpp"
			],
			[
				"mat",
				"src/matrix4.cpp"
			],
			[
				"io",
				"src/python/io_export_webgl_scene.py"
			],
			[
				"tr",
				"src/triangle.cpp"
			],
			[
				"pl",
				"src/plane.cpp"
			],
			[
				"pla",
				"src/plane.cpp"
			],
			[
				"free",
				"src/free_look.cpp"
			],
			[
				"inter",
				"src/intersect.cpp"
			],
			[
				"vec",
				"src/vector_types.cpp"
			],
			[
				"entit",
				"src/entity.cpp"
			],
			[
				"gl_",
				"src/gl_draw.cpp"
			],
			[
				"ent",
				"src/entity.cpp"
			],
			[
				"fis",
				"src/first_person_controller.cpp"
			],
			[
				"gb",
				"src/gblib.cpp"
			],
			[
				"col",
				"src/colours.cpp"
			],
			[
				"qua",
				"src/quaternion.cpp"
			],
			[
				"quat",
				"src/quaternion.cpp"
			],
			[
				"en",
				"src/entity.cpp"
			],
			[
				"mat4",
				"src/matrix4.cpp"
			],
			[
				"gl_d",
				"src/gl_draw.cpp"
			],
			[
				"gl",
				"src/gl_draw.cpp"
			],
			[
				"scr",
				"src/scratch_pad.cpp"
			],
			[
				"plan",
				"src/plane.cpp"
			],
			[
				"colo",
				"src/colours.cpp"
			],
			[
				"tri",
				"src/triangle.cpp"
			],
			[
				"plane",
				"src/plane.cpp"
			],
			[
				"scen",
				"src/scene_types.cpp"
			],
			[
				"web",
				"src/webgl.cpp"
			],
			[
				"prin",
				"src/print.cpp"
			],
			[
				"sce",
				"src/scene_types.cpp"
			],
			[
				"pr",
				"src/print.cpp"
			],
			[
				"pro",
				"src/projection.cpp"
			],
			[
				"qu",
				"src/quaternion.cpp"
			],
			[
				"scra",
				"src/scratch_pad.cpp"
			],
			[
				"de",
				"src/debug_view.cpp"
			],
			[
				"gblib",
				"src/gblib.cpp"
			],
			[
				"",
				"src/vector4.cpp"
			],
			[
				"math",
				"src/math.cpp"
			],
			[
				"main",
				"src/main.cpp"
			],
			[
				"image",
				"src/image_loader.cpp"
			],
			[
				"gl_typ",
				"src/gl_types.cpp"
			],
			[
				"bas",
				"src/glsl/basic.glsl"
			],
			[
				"ass",
				"src/assets.cpp"
			],
			[
				"we",
				"src/webgl.cpp"
			],
			[
				"glsl",
				"src/glsl/flat.glsl"
			],
			[
				"basi",
				"src/glsl/basic.glsl"
			],
			[
				"mac",
				"src/macros.cpp"
			],
			[
				"prim",
				"src/primitive_types.cpp"
			],
			[
				"scre",
				"src/glsl/screen.glsl"
			],
			[
				"shpere",
				"src/glsl/sphere_map.glsl"
			],
			[
				"as",
				"asset_compiler.py"
			],
			[
				"draw",
				"src/gl_draw.cpp"
			],
			[
				"ref",
				"src/glsl/reflection.glsl"
			],
			[
				"gbl",
				"src/gblib.cpp"
			],
			[
				"bui",
				"build.sh"
			],
			[
				"mesh",
				"src/mesh.cpp"
			],
			[
				"ren",
				"src/render_target.cpp"
			],
			[
				"te",
				"src/texture.cpp"
			],
			[
				"engin",
				"src/engine_types.cpp"
			],
			[
				"fxa",
				"src/glsl/fxaa.glsl"
			],
			[
				"fres",
				"src/glsl/components/fresnel.glslc"
			],
			[
				"came",
				"src/camera.cpp"
			],
			[
				"stbi",
				"src/libs/stb_image.h"
			],
			[
				"was",
				"build/wasm_loader.js"
			],
			[
				"inde",
				"build/index.html"
			],
			[
				"inpu",
				"src/input.cpp"
			],
			[
				"bill",
				"src/glsl/components/billboard.glslc"
			],
			[
				"twe",
				"src/tween.cpp"
			],
			[
				"quad",
				"src/quad_mesh.cpp"
			],
			[
				"deb",
				"src/glsl/debug.glsl"
			],
			[
				"tex",
				"src/text.cpp"
			],
			[
				"in",
				"src/glsl/instance_noise.glsl"
			],
			[
				"half",
				"src/glsl/components/half_tone_accumlative.glslc"
			],
			[
				"noise",
				"src/glsl/components/simplex_noise.glslc"
			],
			[
				"ran",
				"src/glsl/components/random.glslc"
			],
			[
				"scree",
				"src/glsl/screen.glsl"
			],
			[
				"ra",
				"src/random.cpp"
			],
			[
				"sc",
				"src/scene_types.cpp"
			],
			[
				"re",
				"src/glsl/rect.glsl"
			],
			[
				"sd",
				"src/glsl/components/sdf.glslc"
			],
			[
				"rec",
				"src/glsl/rect.glsl"
			],
			[
				"ease",
				"src/ease.cpp"
			],
			[
				"eas",
				"src/ease.cpp"
			],
			[
				"tw",
				"src/tween.cpp"
			],
			[
				"anim",
				"src/animation.cpp"
			],
			[
				"an",
				"src/animation.cpp"
			],
			[
				"arr",
				"src/array_types.cpp"
			],
			[
				"ar",
				"src/array_types.cpp"
			],
			[
				"arra",
				"src/array_types.cpp"
			],
			[
				"mem",
				"src/memory.cpp"
			],
			[
				"ser",
				"src/serialize.cpp"
			],
			[
				"gbli",
				"src/gblib.cpp"
			],
			[
				"mes",
				"src/mesh.cpp"
			],
			[
				"cur",
				"src/curve.cpp"
			],
			[
				"debu",
				"src/debug_types.cpp"
			],
			[
				"gamm",
				"src/glsl/components/gamma.glslc"
			],
			[
				"msd",
				"src/glsl/msdf_text.glsl"
			],
			[
				"inst",
				"src/glsl/instance_noise.glsl"
			],
			[
				"render",
				"src/render_target.cpp"
			],
			[
				"eng",
				"src/engine.cpp"
			],
			[
				"engine",
				"src/engine.cpp"
			],
			[
				"glb",
				"src/gblib.cpp"
			],
			[
				"time",
				"src/time.cpp"
			],
			[
				"mani",
				"src/manifest.cpp"
			],
			[
				"camera",
				"src/camera.cpp"
			],
			[
				"typ",
				"src/gl_types.cpp"
			],
			[
				"ve",
				"src/vector_types.cpp"
			],
			[
				"fre",
				"src/free_look.cpp"
			],
			[
				"ima",
				"src/image_loader.cpp"
			],
			[
				"tim",
				"src/time.cpp"
			],
			[
				"msdf",
				"src/glsl/msdf_text.glsl"
			],
			[
				"e",
				"src/entity.cpp"
			],
			[
				"imae",
				"src/image_loader.cpp"
			],
			[
				"font",
				"src/font.cpp"
			],
			[
				"h",
				"src/hash.cpp"
			],
			[
				"hash",
				"src/hash.cpp"
			],
			[
				"ty",
				"src/primitive_types.cpp"
			],
			[
				"app",
				"src/app.cpp"
			],
			[
				"sdf",
				"src/glsl/sdf_text.glsl"
			],
			[
				"man",
				"src/manifest.cpp"
			],
			[
				"im",
				"src/image_loader.cpp"
			],
			[
				"fon",
				"src/font.cpp"
			],
			[
				"stb",
				"src/libs/stb_image.h"
			],
			[
				"engi",
				"src/engine.cpp"
			],
			[
				"ma",
				"src/macros.cpp"
			],
			[
				"webg",
				"src/webgl.cpp"
			],
			[
				"webgl",
				"src/webgl.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 716.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/dev/bowbrush/project.sublime-project"
			]
		],
		"width": 570.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 200.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
